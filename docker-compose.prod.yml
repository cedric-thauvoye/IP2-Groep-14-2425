version: '3.8'

services:
    # API Server (same as development)
    api:
        build:
            context: ./src/api
            dockerfile: Dockerfile
        container_name: peer-evaluation-api-prod
        restart: unless-stopped
        env_file:
            - .env
        ports:
            - '${API_PORT:-3000}:3000'
        depends_on:
            - db
        networks:
            - app-network
        environment:
            - NODE_ENV=production

    # Vue.js Frontend (Production Build)
    app:
        build:
            context: .
            dockerfile: Dockerfile.prod
        container_name: peer-evaluation-app-prod
        restart: unless-stopped
        depends_on:
            - api
        ports:
            - '${APP_PORT:-80}:80'
        networks:
            - app-network

    # MariaDB Database (same as development)
    db:
        build:
            context: ./database
            dockerfile: Dockerfile
        container_name: peer-evaluation-db-prod
        restart: unless-stopped
        env_file:
            - .env
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - '${MYSQL_PORT:-3306}:3306'
        volumes:
            - mariadb_data_prod:/var/lib/mysql
        networks:
            - app-network

    # phpMyAdmin (optional for production, remove if not needed)
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: peer-evaluation-phpmyadmin-prod
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_USER: ${MYSQL_USER}
            PMA_PASSWORD: ${MYSQL_PASSWORD}
            UPLOAD_LIMIT: 300M
        ports:
            - '${PHPMYADMIN_PORT:-8080}:80'
        depends_on:
            - db
        networks:
            - app-network
        # Uncomment the following line to disable phpMyAdmin in production
        # profiles: ["debug"]

networks:
    app-network:
        driver: bridge

volumes:
    mariadb_data_prod:
        driver: local
